buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
		classpath "net.ltgt.gradle:gradle-apt-plugin:0.19"
	}
}

plugins {
	id 'net.ltgt.apt' version "0.19"
	id "org.sonarqube" version "2.6"
	id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'

group = 'corp.ambiental.aprendizado'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

allprojects {
	test{
		jacoco{
			append=true
		}
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
	mavenLocal()
}


ext {
	springCloudVersion = 'Finchley.RELEASE'
	sonarProjectName = 'crud-sonar'
	sonarProjectKey = 'crud'
}



dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.cloud:spring-cloud-starter')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('io.rest-assured:rest-assured:3.2.0')
	compile("io.rest-assured:spring-mock-mvc:3.0.0")

	compile("org.postgresql:postgresql:42.2.5")
	compile("org.springframework:spring-web:5.0.7.RELEASE")
	compile("org.liquibase:liquibase-core:3.6.2")
	compile("org.liquibase:liquibase-maven-plugin:3.6.2")
	testCompile("org.mockito:mockito-core:2.23.0")
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'
	testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version:'2.23.0'
	testCompile "org.junit.platform:junit-platform-launcher:1.0.0"

	compile("org.mapstruct:mapstruct:1.2.0.Final")

	testImplementation(
			'org.junit.jupiter:junit-jupiter-api:5.3.1'
	)
	testRuntimeOnly(
			'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	)
    compile("io.minio:minio:3.0.7")
	compile group: 'org.apache.commons', name: 'commons-csv', version: '1.6'

	apt "org.mapstruct:mapstruct-processor:1.2.0.Final"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
	}
}

sourceSets {
	main {
		java {
			srcDir "${buildDir.absolutePath}/generated/source/apt/main"
		}
	}
}

jar {
	enabled=true
}

test{
	exclude '**/CucumberTest'
	reports.html.enabled=false
	enabled=true
}

task testReport(type: TestReport) {
	destinationDir = file("$buildDir/reports/tests")
	reportOn test
}

apply from: 'gradle/sonar.gradle'
apply from: 'gradle/tests.gradle'

